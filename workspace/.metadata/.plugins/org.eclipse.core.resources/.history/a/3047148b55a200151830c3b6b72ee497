import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;

import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecution;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.query.ResultSet;
import com.hp.hpl.jena.query.ResultSetFormatter;

public class TestCreateCards {
	
	
	public static void main(String[] args) {
		int pId1 = 20;
		int pId2 = 50;

		final int NUMBER_OF_CARDS_PER_CATEGORY = 8;
		ArrayList<Integer> list = new ArrayList<Integer>();
		for (int j=0; j<NUMBER_OF_CARDS_PER_CATEGORY/2; j++) {
    		list.add(new Integer(pId1));
    	}
    	for (int j=0; j<NUMBER_OF_CARDS_PER_CATEGORY/2; j++) {
    		list.add(new Integer(pId2));
    	}
    	Collections.shuffle(list);
        System.out.println(list);
        
		 Cards cards = new Cards(8);
		 String endpoint =
		 "http://dbpedia.org/sparql?default-graph-uri=http%3A%2F%2Fdbpedia.org";
		 String queryString= getQueryString();
		 Query query = QueryFactory.create(queryString);
		 QueryExecution qexec = QueryExecutionFactory.sparqlService(endpoint,
		 query);
		 try {
			 ResultSet rs = qexec.execSelect();
			 ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
			 ResultSetFormatter.outputAsJSON(outputStream, rs);
			 String json = new String(outputStream.toByteArray());
			 writeToFile(json);
			 qexec.close();
		 } catch (Exception e) {
		 qexec.close();
		 }
	}

	public static String getQueryString() {
		String queryString = 
				"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>" +
		                "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>" +
		                "PREFIX owl: <http://www.w3.org/2002/07/owl#>" +
		                "SELECT * WHERE {" +
		                    "?link rdf:type owl:Class." +
		                    "bind(strafter(str(?link),'http://dbpedia.org/ontology/') AS ?cc) " +
		                    "?link rdfs:label ?categoryLabel ." +
		                    "FILTER (LANG(?categoryLabel)='en')" +
		                    "optional{" +
			                    "?link rdf:type owl:Class." +
			                    "?link rdfs:comment ?description ." +
			                    "FILTER (LANG(?description)='en')" +
		                    "}" +
		                    "optional{" +
		                    	"?link rdf:type owl:Class. " +
		                    	"?link rdfs:subClassOf ?upperCategoryUri. " +
		                    	"FILTER (strstarts( str(?upperCategoryUri), 'http://dbpedia.org/ontology' ) ) " +
		                    	"?link rdfs:subClassOf/rdfs:label ?upperCategoryLabel " +
		                    	"FILTER (LANG(?upperCategoryLabel)='en')" +
		                    "}" +
			                    
		                "}";
		return queryString;
	}
	
	public static void writeToFile(String json) {
    	PrintWriter out = null;
		try {
			out = new PrintWriter("C:/Sync/output_jena.txt");
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	out.println(json);
    	out.close();
    }
}
