package sfs2x.extensions.room.play;

import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecution;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.query.ResultSet;

public class Sparql {
	private String queryString;
	private String endpoint;
	private Query query;
	private QueryExecution qexec;
	private ResultSet results;
	
	public Sparql() {
		setQueryString();
	}
 
	public ResultSet executeQuery()
    {
		setEndpoint("http://dbpedia.org/sparql?default-graph-uri=http%3A%2F%2Fdbpedia.org"); 
		setQuery(QueryFactory.create(getQueryString()));
		setQexec(QueryExecutionFactory.sparqlService(getEndpoint(), getQuery()));
		try {
			setResults(getQexec().execSelect());
			return getResults();
		} catch (Exception e) {
			getQexec().close();
			return null;
		}
	    
    }

	public String getQueryString() {
		return queryString;
	}
	public void setQueryString() {
		String query = "";
//		String query = 
//				"SELECT * WHERE " +
//						"{ " + 
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('Ryanair' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/Ryanair> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"UNION " +
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('Flybe' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/Flybe> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"UNION " +
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('Norwegian Air Shuttle' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/Norwegian_Air_Shuttle> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"UNION " +
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('Vueling' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/Vueling> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"UNION " +
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('Transavia' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/Transavia.com> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"UNION " +
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('Wizz Air' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/Wizz_Air> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"UNION " +
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('Air Berlin' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/Air_Berlin> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"UNION " +
//						"{ " +
//						"    SELECT ('Airline' AS ?category) ('European Low Fares Airline Association' AS ?topic) ('EasyJet' AS ?name) ?property_uri ?value " +
//						"    { " +
//						"         <http://dbpedia.org/resource/EasyJet> ?property_uri ?value . " +
//						"         FILTER(STRSTARTS(str(?property_uri), 'http://dbpedia.org/property/') || STRSTARTS(str(?property_uri), 'http://dbpedia.org/ontology/thumbnail') " +
//						" || STRSTARTS(str(?property_uri), 'http://xmlns.com/foaf/0.1/isPrimaryTopicOf')) " +
//						"    } " +
//						"} " +
//						"}";

		this.queryString = query;
	}

	
	public String getEndpoint() {
		return endpoint;
	}

	public void setEndpoint(String endpoint) {
		this.endpoint = endpoint;
	}
	public Query getQuery() {
		return query;
	}
	public void setQuery(Query query) {
		this.query = query;
	}
	public QueryExecution getQexec() {
		return qexec;
	}
	public void setQexec(QueryExecution qexec) {
		this.qexec = qexec;
	}
	public ResultSet getResults() {
		return results;
	}
	public void setResults(ResultSet results) {
		this.results = results;
	}

}
